/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TenantRouteImport } from './routes/_tenant'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as TenantTenantIndexRouteImport } from './routes/_tenant/$tenant/index'
import { Route as TenantTenantSettingsRouteImport } from './routes/_tenant/$tenant/_settings'
import { Route as TenantTenantDashboardRouteImport } from './routes/_tenant/$tenant/_dashboard'
import { Route as TenantTenantSettingsSettingsIndexRouteImport } from './routes/_tenant/$tenant/_settings/settings/index'
import { Route as TenantTenantDashboardDashboardIndexRouteImport } from './routes/_tenant/$tenant/_dashboard/dashboard/index'
import { Route as TenantTenantSettingsSettingsUsersRouteImport } from './routes/_tenant/$tenant/_settings/settings/_users'
import { Route as TenantTenantDashboardDashboardTableIndexRouteImport } from './routes/_tenant/$tenant/_dashboard/dashboard/table/index'
import { Route as TenantTenantDashboardDashboardSettingsIndexRouteImport } from './routes/_tenant/$tenant/_dashboard/dashboard/settings/index'
import { Route as TenantTenantDashboardDashboardFormIndexRouteImport } from './routes/_tenant/$tenant/_dashboard/dashboard/form/index'
import { Route as TenantTenantDashboardDashboardChartIndexRouteImport } from './routes/_tenant/$tenant/_dashboard/dashboard/chart/index'
import { Route as TenantTenantSettingsSettingsUsersUsersIndexRouteImport } from './routes/_tenant/$tenant/_settings/settings/_users/users/index'
import { Route as TenantTenantSettingsSettingsUsersUsersDetailRouteImport } from './routes/_tenant/$tenant/_settings/settings/_users/users/detail'
import { Route as TenantTenantSettingsSettingsUsersUsersUserIdRouteImport } from './routes/_tenant/$tenant/_settings/settings/_users/users/$userId'

const TenantTenantRouteImport = createFileRoute('/_tenant/$tenant')()
const TenantTenantSettingsSettingsRouteImport = createFileRoute(
  '/_tenant/$tenant/_settings/settings',
)()

const TenantRoute = TenantRouteImport.update({
  id: '/_tenant',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TenantTenantRoute = TenantTenantRouteImport.update({
  id: '/$tenant',
  path: '/$tenant',
  getParentRoute: () => TenantRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const TenantTenantIndexRoute = TenantTenantIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TenantTenantRoute,
} as any)
const TenantTenantSettingsRoute = TenantTenantSettingsRouteImport.update({
  id: '/_settings',
  getParentRoute: () => TenantTenantRoute,
} as any)
const TenantTenantDashboardRoute = TenantTenantDashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => TenantTenantRoute,
} as any)
const TenantTenantSettingsSettingsRoute =
  TenantTenantSettingsSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => TenantTenantSettingsRoute,
  } as any)
const TenantTenantSettingsSettingsIndexRoute =
  TenantTenantSettingsSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TenantTenantSettingsSettingsRoute,
  } as any)
const TenantTenantDashboardDashboardIndexRoute =
  TenantTenantDashboardDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => TenantTenantDashboardRoute,
  } as any)
const TenantTenantSettingsSettingsUsersRoute =
  TenantTenantSettingsSettingsUsersRouteImport.update({
    id: '/_users',
    getParentRoute: () => TenantTenantSettingsSettingsRoute,
  } as any)
const TenantTenantDashboardDashboardTableIndexRoute =
  TenantTenantDashboardDashboardTableIndexRouteImport.update({
    id: '/dashboard/table/',
    path: '/dashboard/table/',
    getParentRoute: () => TenantTenantDashboardRoute,
  } as any)
const TenantTenantDashboardDashboardSettingsIndexRoute =
  TenantTenantDashboardDashboardSettingsIndexRouteImport.update({
    id: '/dashboard/settings/',
    path: '/dashboard/settings/',
    getParentRoute: () => TenantTenantDashboardRoute,
  } as any)
const TenantTenantDashboardDashboardFormIndexRoute =
  TenantTenantDashboardDashboardFormIndexRouteImport.update({
    id: '/dashboard/form/',
    path: '/dashboard/form/',
    getParentRoute: () => TenantTenantDashboardRoute,
  } as any)
const TenantTenantDashboardDashboardChartIndexRoute =
  TenantTenantDashboardDashboardChartIndexRouteImport.update({
    id: '/dashboard/chart/',
    path: '/dashboard/chart/',
    getParentRoute: () => TenantTenantDashboardRoute,
  } as any)
const TenantTenantSettingsSettingsUsersUsersIndexRoute =
  TenantTenantSettingsSettingsUsersUsersIndexRouteImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => TenantTenantSettingsSettingsUsersRoute,
  } as any)
const TenantTenantSettingsSettingsUsersUsersDetailRoute =
  TenantTenantSettingsSettingsUsersUsersDetailRouteImport.update({
    id: '/users/detail',
    path: '/users/detail',
    getParentRoute: () => TenantTenantSettingsSettingsUsersRoute,
  } as any)
const TenantTenantSettingsSettingsUsersUsersUserIdRoute =
  TenantTenantSettingsSettingsUsersUsersUserIdRouteImport.update({
    id: '/users/$userId',
    path: '/users/$userId',
    getParentRoute: () => TenantTenantSettingsSettingsUsersRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/$tenant': typeof TenantTenantSettingsRouteWithChildren
  '/$tenant/': typeof TenantTenantIndexRoute
  '/$tenant/settings': typeof TenantTenantSettingsSettingsUsersRouteWithChildren
  '/$tenant/dashboard': typeof TenantTenantDashboardDashboardIndexRoute
  '/$tenant/settings/': typeof TenantTenantSettingsSettingsIndexRoute
  '/$tenant/dashboard/chart': typeof TenantTenantDashboardDashboardChartIndexRoute
  '/$tenant/dashboard/form': typeof TenantTenantDashboardDashboardFormIndexRoute
  '/$tenant/dashboard/settings': typeof TenantTenantDashboardDashboardSettingsIndexRoute
  '/$tenant/dashboard/table': typeof TenantTenantDashboardDashboardTableIndexRoute
  '/$tenant/settings/users/$userId': typeof TenantTenantSettingsSettingsUsersUsersUserIdRoute
  '/$tenant/settings/users/detail': typeof TenantTenantSettingsSettingsUsersUsersDetailRoute
  '/$tenant/settings/users': typeof TenantTenantSettingsSettingsUsersUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/$tenant': typeof TenantTenantIndexRoute
  '/$tenant/settings': typeof TenantTenantSettingsSettingsIndexRoute
  '/$tenant/dashboard': typeof TenantTenantDashboardDashboardIndexRoute
  '/$tenant/dashboard/chart': typeof TenantTenantDashboardDashboardChartIndexRoute
  '/$tenant/dashboard/form': typeof TenantTenantDashboardDashboardFormIndexRoute
  '/$tenant/dashboard/settings': typeof TenantTenantDashboardDashboardSettingsIndexRoute
  '/$tenant/dashboard/table': typeof TenantTenantDashboardDashboardTableIndexRoute
  '/$tenant/settings/users/$userId': typeof TenantTenantSettingsSettingsUsersUsersUserIdRoute
  '/$tenant/settings/users/detail': typeof TenantTenantSettingsSettingsUsersUsersDetailRoute
  '/$tenant/settings/users': typeof TenantTenantSettingsSettingsUsersUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_tenant': typeof TenantRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_tenant/$tenant': typeof TenantTenantRouteWithChildren
  '/_tenant/$tenant/_dashboard': typeof TenantTenantDashboardRouteWithChildren
  '/_tenant/$tenant/_settings': typeof TenantTenantSettingsRouteWithChildren
  '/_tenant/$tenant/': typeof TenantTenantIndexRoute
  '/_tenant/$tenant/_settings/settings': typeof TenantTenantSettingsSettingsRouteWithChildren
  '/_tenant/$tenant/_settings/settings/_users': typeof TenantTenantSettingsSettingsUsersRouteWithChildren
  '/_tenant/$tenant/_dashboard/dashboard/': typeof TenantTenantDashboardDashboardIndexRoute
  '/_tenant/$tenant/_settings/settings/': typeof TenantTenantSettingsSettingsIndexRoute
  '/_tenant/$tenant/_dashboard/dashboard/chart/': typeof TenantTenantDashboardDashboardChartIndexRoute
  '/_tenant/$tenant/_dashboard/dashboard/form/': typeof TenantTenantDashboardDashboardFormIndexRoute
  '/_tenant/$tenant/_dashboard/dashboard/settings/': typeof TenantTenantDashboardDashboardSettingsIndexRoute
  '/_tenant/$tenant/_dashboard/dashboard/table/': typeof TenantTenantDashboardDashboardTableIndexRoute
  '/_tenant/$tenant/_settings/settings/_users/users/$userId': typeof TenantTenantSettingsSettingsUsersUsersUserIdRoute
  '/_tenant/$tenant/_settings/settings/_users/users/detail': typeof TenantTenantSettingsSettingsUsersUsersDetailRoute
  '/_tenant/$tenant/_settings/settings/_users/users/': typeof TenantTenantSettingsSettingsUsersUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/login'
    | '/register'
    | '/$tenant'
    | '/$tenant/'
    | '/$tenant/settings'
    | '/$tenant/dashboard'
    | '/$tenant/settings/'
    | '/$tenant/dashboard/chart'
    | '/$tenant/dashboard/form'
    | '/$tenant/dashboard/settings'
    | '/$tenant/dashboard/table'
    | '/$tenant/settings/users/$userId'
    | '/$tenant/settings/users/detail'
    | '/$tenant/settings/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/login'
    | '/register'
    | '/$tenant'
    | '/$tenant/settings'
    | '/$tenant/dashboard'
    | '/$tenant/dashboard/chart'
    | '/$tenant/dashboard/form'
    | '/$tenant/dashboard/settings'
    | '/$tenant/dashboard/table'
    | '/$tenant/settings/users/$userId'
    | '/$tenant/settings/users/detail'
    | '/$tenant/settings/users'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/_auth'
    | '/_tenant'
    | '/_auth/login'
    | '/_auth/register'
    | '/_tenant/$tenant'
    | '/_tenant/$tenant/_dashboard'
    | '/_tenant/$tenant/_settings'
    | '/_tenant/$tenant/'
    | '/_tenant/$tenant/_settings/settings'
    | '/_tenant/$tenant/_settings/settings/_users'
    | '/_tenant/$tenant/_dashboard/dashboard/'
    | '/_tenant/$tenant/_settings/settings/'
    | '/_tenant/$tenant/_dashboard/dashboard/chart/'
    | '/_tenant/$tenant/_dashboard/dashboard/form/'
    | '/_tenant/$tenant/_dashboard/dashboard/settings/'
    | '/_tenant/$tenant/_dashboard/dashboard/table/'
    | '/_tenant/$tenant/_settings/settings/_users/users/$userId'
    | '/_tenant/$tenant/_settings/settings/_users/users/detail'
    | '/_tenant/$tenant/_settings/settings/_users/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  AuthRoute: typeof AuthRouteWithChildren
  TenantRoute: typeof TenantRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_tenant': {
      id: '/_tenant'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof TenantRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_tenant/$tenant': {
      id: '/_tenant/$tenant'
      path: '/$tenant'
      fullPath: '/$tenant'
      preLoaderRoute: typeof TenantTenantRouteImport
      parentRoute: typeof TenantRoute
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_tenant/$tenant/': {
      id: '/_tenant/$tenant/'
      path: '/'
      fullPath: '/$tenant/'
      preLoaderRoute: typeof TenantTenantIndexRouteImport
      parentRoute: typeof TenantTenantRoute
    }
    '/_tenant/$tenant/_settings': {
      id: '/_tenant/$tenant/_settings'
      path: ''
      fullPath: '/$tenant'
      preLoaderRoute: typeof TenantTenantSettingsRouteImport
      parentRoute: typeof TenantTenantRoute
    }
    '/_tenant/$tenant/_dashboard': {
      id: '/_tenant/$tenant/_dashboard'
      path: '/$tenant'
      fullPath: '/$tenant'
      preLoaderRoute: typeof TenantTenantDashboardRouteImport
      parentRoute: typeof TenantTenantRoute
    }
    '/_tenant/$tenant/_settings/settings': {
      id: '/_tenant/$tenant/_settings/settings'
      path: '/settings'
      fullPath: '/$tenant/settings'
      preLoaderRoute: typeof TenantTenantSettingsSettingsRouteImport
      parentRoute: typeof TenantTenantSettingsRoute
    }
    '/_tenant/$tenant/_settings/settings/': {
      id: '/_tenant/$tenant/_settings/settings/'
      path: '/'
      fullPath: '/$tenant/settings/'
      preLoaderRoute: typeof TenantTenantSettingsSettingsIndexRouteImport
      parentRoute: typeof TenantTenantSettingsSettingsRoute
    }
    '/_tenant/$tenant/_dashboard/dashboard/': {
      id: '/_tenant/$tenant/_dashboard/dashboard/'
      path: '/dashboard'
      fullPath: '/$tenant/dashboard'
      preLoaderRoute: typeof TenantTenantDashboardDashboardIndexRouteImport
      parentRoute: typeof TenantTenantDashboardRoute
    }
    '/_tenant/$tenant/_settings/settings/_users': {
      id: '/_tenant/$tenant/_settings/settings/_users'
      path: '/settings'
      fullPath: '/$tenant/settings'
      preLoaderRoute: typeof TenantTenantSettingsSettingsUsersRouteImport
      parentRoute: typeof TenantTenantSettingsSettingsRoute
    }
    '/_tenant/$tenant/_dashboard/dashboard/table/': {
      id: '/_tenant/$tenant/_dashboard/dashboard/table/'
      path: '/dashboard/table'
      fullPath: '/$tenant/dashboard/table'
      preLoaderRoute: typeof TenantTenantDashboardDashboardTableIndexRouteImport
      parentRoute: typeof TenantTenantDashboardRoute
    }
    '/_tenant/$tenant/_dashboard/dashboard/settings/': {
      id: '/_tenant/$tenant/_dashboard/dashboard/settings/'
      path: '/dashboard/settings'
      fullPath: '/$tenant/dashboard/settings'
      preLoaderRoute: typeof TenantTenantDashboardDashboardSettingsIndexRouteImport
      parentRoute: typeof TenantTenantDashboardRoute
    }
    '/_tenant/$tenant/_dashboard/dashboard/form/': {
      id: '/_tenant/$tenant/_dashboard/dashboard/form/'
      path: '/dashboard/form'
      fullPath: '/$tenant/dashboard/form'
      preLoaderRoute: typeof TenantTenantDashboardDashboardFormIndexRouteImport
      parentRoute: typeof TenantTenantDashboardRoute
    }
    '/_tenant/$tenant/_dashboard/dashboard/chart/': {
      id: '/_tenant/$tenant/_dashboard/dashboard/chart/'
      path: '/dashboard/chart'
      fullPath: '/$tenant/dashboard/chart'
      preLoaderRoute: typeof TenantTenantDashboardDashboardChartIndexRouteImport
      parentRoute: typeof TenantTenantDashboardRoute
    }
    '/_tenant/$tenant/_settings/settings/_users/users/': {
      id: '/_tenant/$tenant/_settings/settings/_users/users/'
      path: '/users'
      fullPath: '/$tenant/settings/users'
      preLoaderRoute: typeof TenantTenantSettingsSettingsUsersUsersIndexRouteImport
      parentRoute: typeof TenantTenantSettingsSettingsUsersRoute
    }
    '/_tenant/$tenant/_settings/settings/_users/users/detail': {
      id: '/_tenant/$tenant/_settings/settings/_users/users/detail'
      path: '/users/detail'
      fullPath: '/$tenant/settings/users/detail'
      preLoaderRoute: typeof TenantTenantSettingsSettingsUsersUsersDetailRouteImport
      parentRoute: typeof TenantTenantSettingsSettingsUsersRoute
    }
    '/_tenant/$tenant/_settings/settings/_users/users/$userId': {
      id: '/_tenant/$tenant/_settings/settings/_users/users/$userId'
      path: '/users/$userId'
      fullPath: '/$tenant/settings/users/$userId'
      preLoaderRoute: typeof TenantTenantSettingsSettingsUsersUsersUserIdRouteImport
      parentRoute: typeof TenantTenantSettingsSettingsUsersRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface TenantTenantDashboardRouteChildren {
  TenantTenantDashboardDashboardIndexRoute: typeof TenantTenantDashboardDashboardIndexRoute
  TenantTenantDashboardDashboardChartIndexRoute: typeof TenantTenantDashboardDashboardChartIndexRoute
  TenantTenantDashboardDashboardFormIndexRoute: typeof TenantTenantDashboardDashboardFormIndexRoute
  TenantTenantDashboardDashboardSettingsIndexRoute: typeof TenantTenantDashboardDashboardSettingsIndexRoute
  TenantTenantDashboardDashboardTableIndexRoute: typeof TenantTenantDashboardDashboardTableIndexRoute
}

const TenantTenantDashboardRouteChildren: TenantTenantDashboardRouteChildren = {
  TenantTenantDashboardDashboardIndexRoute:
    TenantTenantDashboardDashboardIndexRoute,
  TenantTenantDashboardDashboardChartIndexRoute:
    TenantTenantDashboardDashboardChartIndexRoute,
  TenantTenantDashboardDashboardFormIndexRoute:
    TenantTenantDashboardDashboardFormIndexRoute,
  TenantTenantDashboardDashboardSettingsIndexRoute:
    TenantTenantDashboardDashboardSettingsIndexRoute,
  TenantTenantDashboardDashboardTableIndexRoute:
    TenantTenantDashboardDashboardTableIndexRoute,
}

const TenantTenantDashboardRouteWithChildren =
  TenantTenantDashboardRoute._addFileChildren(
    TenantTenantDashboardRouteChildren,
  )

interface TenantTenantSettingsSettingsUsersRouteChildren {
  TenantTenantSettingsSettingsUsersUsersUserIdRoute: typeof TenantTenantSettingsSettingsUsersUsersUserIdRoute
  TenantTenantSettingsSettingsUsersUsersDetailRoute: typeof TenantTenantSettingsSettingsUsersUsersDetailRoute
  TenantTenantSettingsSettingsUsersUsersIndexRoute: typeof TenantTenantSettingsSettingsUsersUsersIndexRoute
}

const TenantTenantSettingsSettingsUsersRouteChildren: TenantTenantSettingsSettingsUsersRouteChildren =
  {
    TenantTenantSettingsSettingsUsersUsersUserIdRoute:
      TenantTenantSettingsSettingsUsersUsersUserIdRoute,
    TenantTenantSettingsSettingsUsersUsersDetailRoute:
      TenantTenantSettingsSettingsUsersUsersDetailRoute,
    TenantTenantSettingsSettingsUsersUsersIndexRoute:
      TenantTenantSettingsSettingsUsersUsersIndexRoute,
  }

const TenantTenantSettingsSettingsUsersRouteWithChildren =
  TenantTenantSettingsSettingsUsersRoute._addFileChildren(
    TenantTenantSettingsSettingsUsersRouteChildren,
  )

interface TenantTenantSettingsSettingsRouteChildren {
  TenantTenantSettingsSettingsUsersRoute: typeof TenantTenantSettingsSettingsUsersRouteWithChildren
  TenantTenantSettingsSettingsIndexRoute: typeof TenantTenantSettingsSettingsIndexRoute
}

const TenantTenantSettingsSettingsRouteChildren: TenantTenantSettingsSettingsRouteChildren =
  {
    TenantTenantSettingsSettingsUsersRoute:
      TenantTenantSettingsSettingsUsersRouteWithChildren,
    TenantTenantSettingsSettingsIndexRoute:
      TenantTenantSettingsSettingsIndexRoute,
  }

const TenantTenantSettingsSettingsRouteWithChildren =
  TenantTenantSettingsSettingsRoute._addFileChildren(
    TenantTenantSettingsSettingsRouteChildren,
  )

interface TenantTenantSettingsRouteChildren {
  TenantTenantSettingsSettingsRoute: typeof TenantTenantSettingsSettingsRouteWithChildren
}

const TenantTenantSettingsRouteChildren: TenantTenantSettingsRouteChildren = {
  TenantTenantSettingsSettingsRoute:
    TenantTenantSettingsSettingsRouteWithChildren,
}

const TenantTenantSettingsRouteWithChildren =
  TenantTenantSettingsRoute._addFileChildren(TenantTenantSettingsRouteChildren)

interface TenantTenantRouteChildren {
  TenantTenantDashboardRoute: typeof TenantTenantDashboardRouteWithChildren
  TenantTenantSettingsRoute: typeof TenantTenantSettingsRouteWithChildren
  TenantTenantIndexRoute: typeof TenantTenantIndexRoute
}

const TenantTenantRouteChildren: TenantTenantRouteChildren = {
  TenantTenantDashboardRoute: TenantTenantDashboardRouteWithChildren,
  TenantTenantSettingsRoute: TenantTenantSettingsRouteWithChildren,
  TenantTenantIndexRoute: TenantTenantIndexRoute,
}

const TenantTenantRouteWithChildren = TenantTenantRoute._addFileChildren(
  TenantTenantRouteChildren,
)

interface TenantRouteChildren {
  TenantTenantRoute: typeof TenantTenantRouteWithChildren
}

const TenantRouteChildren: TenantRouteChildren = {
  TenantTenantRoute: TenantTenantRouteWithChildren,
}

const TenantRouteWithChildren =
  TenantRoute._addFileChildren(TenantRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  AuthRoute: AuthRouteWithChildren,
  TenantRoute: TenantRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
